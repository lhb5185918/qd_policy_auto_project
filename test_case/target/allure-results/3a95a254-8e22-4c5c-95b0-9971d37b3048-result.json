{"name": "test_label[case0]", "status": "broken", "statusDetails": {"message": "TypeError: 'NoneType' object is not subscriptable", "trace": "self = <test_case.test_origin.Test_origin object at 0x000002A0F71F6BB0>\ncase = {'data': '{\"policyId\":\"1514795741333856257\",\"policyType\":\"1\"}', 'header': '', 'method': 'get', 'url': 'https://xha-policy.lingxitest.com/api/lx-policy/policy-label/check-before-maintenance?', ...}\nget_token = {'authorization': 'Basic bHhfb3BlcmF0aW9uOmx4X29wZXJhdGlvbl9zZWNyZXQ=', 'lingxi-auth': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUz...NDc2MywibmJmIjoxNjUwNDIxMTYzfQ.bgWyeJhkr5GgKPr76BGc4VE-5jBL0JR0lfdkuP2RLSCByZJH73GOp8zeMbdsD5tNtDozyhKolteP0BQwiw_1Ww'}\nget_policy_id = [None, None, None]\n\n    @pytest.mark.run(order=3)\n    @pytest.mark.parametrize('case', res3)\n    def test_label(self, case, get_token, get_policy_id):\n        header = get_token\n        url = case['url']\n        method = case['method']\n        title = case['用例名称']\n        number = case['用例编号']\n        for i in get_policy_id:\n>           data = {\"policyId\": i['id'], \"policyType\": \"1\"}\nE           TypeError: 'NoneType' object is not subscriptable\n\ntest_origin.py:57: TypeError"}, "parameters": [{"name": "case", "value": "{'用例编号': 'bqwh-1', '用例名称': '标签维护接口', 'method': 'get', 'url': 'https://xha-policy.lingxitest.com/api/lx-policy/policy-label/check-before-maintenance?', 'header': '', 'data': '{\"policyId\":\"1514795741333856257\",\"policyType\":\"1\"}', '预期结果': '', '实际结果': ''}"}], "start": 1650421298784, "stop": 1650421298784, "uuid": "c96476c1-c6a8-4a30-a2a0-e13953fdfa0c", "historyId": "e25c404d26efe8bea5f742560990e91f", "testCaseId": "e48e4d23ec8b21fc3613d5e03dc6ec08", "fullName": "test_case.test_origin.Test_origin#test_label", "labels": [{"name": "tag", "value": "run(order=3)"}, {"name": "parentSuite", "value": "test_case"}, {"name": "suite", "value": "test_origin"}, {"name": "subSuite", "value": "Test_origin"}, {"name": "host", "value": "PC-20200812QIHW"}, {"name": "thread", "value": "4092-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_origin"}]}