{"name": "test_login[case4]", "status": "broken", "statusDetails": {"message": "json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)", "trace": "self = <test_case.test_login.Test_login object at 0x00000240FB091F10>\ncase = {'data': '', 'header': '', 'method': 'post', 'url': 'https://xha.lingxitest.com/api/lx-operation/lingxi-auth/oauth/tok...000000&username=gaoxinjishu&password=be85a89ae3d55da3d7a0bba4666e8be3&grant_type=password&scope=all&type=account', ...}\n\n    @pytest.mark.parametrize(\"case\", res)\n    def test_login(self, case):\n        number = case['用例编号']\n        title = case['用例名称']\n        method = case['method']\n        url = case['url']\n>       header = json.loads(case['header'])\n\ntest_login.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nE:\\python\\lib\\json\\__init__.py:346: in loads\n    return _default_decoder.decode(s)\nE:\\python\\lib\\json\\decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x00000240F181DF10>, s = '', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nE:\\python\\lib\\json\\decoder.py:355: JSONDecodeError"}, "parameters": [{"name": "case", "value": "{'用例编号': 'login-5', '用例名称': '登录测试5', 'method': 'post', 'url': 'https://xha.lingxitest.com/api/lx-operation/lingxi-auth/oauth/token?tenantId=000000&username=gaoxinjishu&password=be85a89ae3d55da3d7a0bba4666e8be3&grant_type=password&scope=all&type=account', 'header': '', 'data': '', '预期结果': '', '实际结果': ''}"}], "start": 1650007908207, "stop": 1650007908207, "uuid": "9bbf2adb-7abb-471d-a0b5-72a2ba5f45cb", "historyId": "5c768a9953cdb54802768b23206cabe5", "testCaseId": "545159219aea40d38c768fae9108b043", "fullName": "test_case.test_login.Test_login#test_login", "labels": [{"name": "parentSuite", "value": "test_case"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "Test_login"}, {"name": "host", "value": "PC-20200812QIHW"}, {"name": "thread", "value": "16124-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_login"}]}