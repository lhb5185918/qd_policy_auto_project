{"name": "test_delete[case1]", "status": "failed", "statusDetails": {"message": "AssertionError: assert 405 == 200\n  +405\n  -200", "trace": "self = <test_case.test_origin.Test_origin object at 0x00000270C96A5550>\ncase = {'data': '', 'header': '', 'method': 'get', 'url': 'https://xha-policy.lingxitest.com/api/lx-policy/lx-policy-original/policyoriginalinfo/remove', ...}\nget_token = {'authorization': 'Basic bHhfb3BlcmF0aW9uOmx4X29wZXJhdGlvbl9zZWNyZXQ=', 'lingxi-auth': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUz...NjY0OSwibmJmIjoxNjUwMDEzMDQ5fQ.CHl1t1rvTVdfH5hK0Vx6EHwLI-aQdOPvyBm__2RqeEvAUvhQuVy_n8NVLN_Vk5kZL0uqFeDx0cWloBDayyg5gg'}\nget_policy_id = [{'id': 1514870952389419009}, {'id': 1514870954473988098}, {'id': 1514870954473988098}]\n\n    @pytest.mark.run(order=4)\n    @pytest.mark.parametrize('case', res2)\n    def test_delete(self, case, get_token, get_policy_id):\n        header = get_token\n        url = case['url']\n        method = case['method']\n        title = case['用例名称']\n        number = case['用例编号']\n        for i in get_policy_id:\n            data = {\"ids\": i['id']}\n            if data == None:\n                logger.info('政策已删除 {}{}'.format(number, title))\n            else:\n                res = Requests().send(data=data, header=header, url=url, method=method)\n                logger.info('{}{}{}'.format(number, title, res))\n>               assert res['code'] == 200\nE               assert 405 == 200\nE                 +405\nE                 -200\n\ntest_case\\test_origin.py:84: AssertionError"}, "attachments": [{"name": "log", "source": "a999c31a-984e-4839-86a4-73b6b22e7e86-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "case", "value": "{'用例编号': 'delete-2', '用例名称': '原文政策删除', 'method': 'get', 'url': 'https://xha-policy.lingxitest.com/api/lx-policy/lx-policy-original/policyoriginalinfo/remove', 'header': '', 'data': '', '预期结果': '', '实际结果': ''}"}], "start": 1650013182668, "stop": 1650013182785, "uuid": "3be5a922-f3fc-464c-ae80-a1d895b687eb", "historyId": "e8298080543b7ac6bc61540914d32b22", "testCaseId": "b3b3ff37e50c0bd0b3a989827c91d945", "fullName": "test_case.test_origin.Test_origin#test_delete", "labels": [{"name": "tag", "value": "run(order=4)"}, {"name": "parentSuite", "value": "test_case"}, {"name": "suite", "value": "test_origin"}, {"name": "subSuite", "value": "Test_origin"}, {"name": "host", "value": "PC-20200812QIHW"}, {"name": "thread", "value": "16492-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_origin"}]}